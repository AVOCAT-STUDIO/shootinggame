    createExArray() {
        let c = this.ex.innerText =answer;
        exArray.push(c);
       while(true) {
            if(exArray.length<enemyArray.length){
                exs = this.ex.innerText = getRandom(20);
                if(checkDuplicate(exArray, exs)==false && exs!=answer){
                    exArray.push(exs);
                }
            }else{
                break;
            }
        }
    }



    while (true) { //무한 반복으로 돌려버림..... 
        //6자 미만일 경우에만...
        if (num.length < 6) {
            let n = getRandomByRange(1, 45);
            console.log("랜덤번호는", n);
            if(checkDuplicate(num,n)==false){
                //배열에 존재하지 않을때만 푸쉬한다.(중복되지 않은 경우)
                num.push(n);
            }

        } else {
            break;
        }
    }
    console.log(num);

    function createEx(){
        let tempArray=new Array(4);  //증복체크를 위한 배열 
        let answer = questArray[0].a+questArray[0].b; 
        
        let target=getRandom(enemyArray.length); 

        tempArray[target]=answer;

        enemyArray[target].ex.innerText =answer;
        
        while(true){
            //나머지 적군에게는 정답 이외의 임의의 수를 채워넣되, 중복되지 않은 것으로...
            

            if(getEmptyCount(tempArray)<=0 ){ //채워지기 전까지만 아래의 코드가 반복수행
                break;
            }else{
                let exnum=getRandomByRange( parseInt(inputA.value)*2 , parseInt(inputB.value)*2 );

                //중복되지 않았을때만...
                
                //if(result==false){
                    //임의의 위치에 넣기 
                    for(let i=0;i<tempArray.length;i++){
                        let result=checkDuplicate(exnum);
                        if(result==false){
                            if(tempArray[i] ==undefined){
                                tempArray[i] = exnum;    
                                
                            }   

                        }
                    }
                //}
                    console.log(tempArray);
            }
            
        }

        //정답을 갖고있는 적군을 제외한 나머지 적군들에게, 생성된 배열의 값들을 대입 
        for(let i=0;i<tempArray.length;i++){
            enemyArray[i].ex.innerText=tempArray[i];     
        }
    }


    exArray= new Array(4);
    let target=getRandom(exArray.length);
    exArray[target]=answer;
    enemyArray[target].ex.innerText =exArray[target];
    for(let i=0; i<exArray-1;i++){
        let n=getRandomByRange(parseInt(inputA.value)*2,parseInt(inputB.value)*2);
        if(checkDuplicate(exArray,n)==false){
            exArray[i].innerText=n;
        }
    }




    for(let i=0;i<enemyArray.length;i++){
        let n=getRandomByRange(parseInt(inputA.value)*2,parseInt(inputB.value)*2);
        if(target !=i ){
            if(enemyArray[target].ex.innerText!=n){
                enemyArray[i].ex.innerText=n;
            }else{
                n=getRandomByRange(parseInt(inputA.value)*2,parseInt(inputB.value)*2);
            }
        }
    }